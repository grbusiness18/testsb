'use strict';

const semver = require('semver');
const { BadRequest, PreconditionFailed } = require('http-errors');
const OSB_API_VERSIONS_SUPPORTED = '^2.4';

module.exports = function apiVersion(req, res, next) {
  const logger = req.loggingContext.getLogger('/ServiceBroker/Middleware');
  let apiVersion = req.headers['x-broker-api-version'];
  if (!apiVersion) {
    return next(new PreconditionFailed(`No Broker API version provided. Supported Broker API versions: ${OSB_API_VERSIONS_SUPPORTED}.`));
  }

  let satisfies;
  try {
    // Needed because semver expects MAJOR.MINOR.PATCH but Cloud Controller provides only MAJOR.MINOR
    satisfies = semver.satisfies(apiVersion + '.0', OSB_API_VERSIONS_SUPPORTED);
  } catch (e) {
    logger.error(e, 'Invalid x-broker-api-version header %s', apiVersion);
    return next(new BadRequest('Invalid x-broker-api-version header'));
  }

  if (satisfies) {
    next();
  } else {
    next(new PreconditionFailed(`Supported Broker API versions: ${OSB_API_VERSIONS_SUPPORTED}. Request version: ${apiVersion}`));
  }
};
